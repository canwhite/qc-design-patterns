/* 
一、两个问题
1.裁员
2.没有大厂经历，能翻身吗？

先说答案——答案是可以
大前提—— 你要学会正视那些正在让这个阶段的你耿耿于怀的东西——学历不好，没有大厂经历，裁员
        你过去的失误和当下的处境不能代表你，更不能定义你的未来。

        “没有坑，就先让自己成为萝卜”。

如何成为“萝卜”？这又是另一个巨大的命题。

1.找人。
找出你所在团队/圈子里最厉害的人，和他保持技术/工作上的交流，尝试争取/创造和他共事的机会。
如果你身边没有这样的人，优秀的技术社区（比如掘金）里一定有。
996无法使你迅速成长，但和大牛一起解决问题必定使你受益良多。

2.阅读。
读好的书，更要读好的代码。我们平时使用频率最高的那些库和框架，就是最好的阅读材料。
静下心，不要急。读不下去是正常的，多试几次——学习的本质不就是在不断的重复中形成自己的理解吗？

3.不挑剔。
干活的时候，不要挑简单的做；
读书的时候，不要挑“xx21天迅速上手”这样的读——容易的事情任谁都做得来，
但日日如此，自己或许也只能沦为芸芸众生中极为平庸而懦弱的那一个。

二、前方的路
一些半路出家的前端会给自己扣上这样一顶帽子——我擅长动手，不喜欢理论，所以我不学理论。
这种想法并不酷，它往往是出于恐惧，是一种对知识的逃避
推书：
设计模式：可复用面向对象软件的基础
Head First 设计模式（中文版）
 */